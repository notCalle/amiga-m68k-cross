%YAML 1.1
---
name: oci-image

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - '*'

env:
  IMAGE_TAG_PREFIX: ghcr.io/notcalle/amiga-m68k-cross

jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            binutils:
              - '.github/workflows/crosstools.yml'
              - 'Makefile'
              - 'builder/**'
              - 'binutils/**'
            llvm:
              - '.github/workflows/crosstools.yml'
              - 'Makefile'
              - 'builder/**'
              - 'llvm/**'
    outputs:
      binutils: ${{ steps.filter.outputs.binutils }}
      llvm: ${{ steps.filter.outputs.llvm }}

  builder:
    name: Build helper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.actor }}

      - name: Build container
        run: make builder-container

      - name: Push container to registry
        run: make push-builder-container

  binutils:
    name: Binutils
    needs:
      - builder
      - changes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        if: needs.changes.outputs.binutils == 'true'

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        if: needs.changes.outputs.binutils == 'true'
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.actor }}

      - name: Build container
        if: needs.changes.outputs.binutils == 'true'
        run: make binutils-container

      - name: Push container to registry
        if: needs.changes.outputs.binutils == 'true'
        run: make push-binutils-container

  llvm:
    name: LLVM (Clang)
    runs-on: ubuntu-latest
    needs:
      - builder
      - changes

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        if: needs.changes.outputs.llvm == 'true'

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        if: needs.changes.outputs.llvm == 'true'
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.actor }}

      - name: Build container
        if: needs.changes.outputs.llvm == 'true'
        run: make llvm-container

      - name: Push container to registry
        if: needs.changes.outputs.llvm == 'true'
        run: make push-llvm-container

  vbcc:
    name: VBCC Cross Compiler Tool Chain
    runs-on: ubuntu-latest
    needs:
      - builder

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: container/vbcc/cache
          key: ${{ runner.os }}-vbcc-${{ hashFiles('**/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-vbcc-
            ${{ runner.os }}-

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.actor }}

      - name: Build container
        run: make vbcc-xdk-container

      - name: Push container to registry
        run: make push-vbcc-xdk-container

  toolchain:
    name: Tool Chain
    runs-on: ubuntu-latest
    needs:
      - binutils
      - llvm
      - vbcc

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.actor }}

      - name: Build container
        run: make toolchain-container

      - name: Push container to registry
        run: make push-toolchain-container
...
